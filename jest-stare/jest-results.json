{
  "numFailedTestSuites": 1,
  "numFailedTests": 0,
  "numPassedTestSuites": 8,
  "numPassedTests": 94,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 1,
  "numTodoTests": 0,
  "numTotalTestSuites": 9,
  "numTotalTests": 94,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1747493502869,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493525671,
        "runtime": 4533,
        "slow": false,
        "start": 1747493521138
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\store\\slices\\__tests__\\quizSlice.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 71,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should return the initial state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the initial state"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle resetQuizState",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle resetQuizState"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle setCurrentQuestion",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle setCurrentQuestion"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle setUserAnswer for new answer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle setUserAnswer for new answer"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle setUserAnswer for existing answer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle setUserAnswer for existing answer"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle timer actions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle timer actions"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle markQuizCompleted",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle markQuizCompleted"
        },
        {
          "ancestorTitles": [
            "quizSlice"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "quizSlice should handle submitQuiz action",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle submitQuiz action"
        }
      ],
      "failureMessage": null
    },
    {
      "failureMessage": "  \u001b[1m‚óè \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n",
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 0,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 0,
        "runtime": 0,
        "slow": false,
        "start": 0
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testExecError": {
        "message": "Your test suite must contain at least one test.",
        "stack": "Error: Your test suite must contain at least one test.\n    at onResult (C:\\Work\\Projects\\ai-learning\\node_modules\\@jest\\core\\build\\TestScheduler.js:133:18)\n    at C:\\Work\\Projects\\ai-learning\\node_modules\\@jest\\core\\build\\TestScheduler.js:254:19\n    at C:\\Work\\Projects\\ai-learning\\node_modules\\emittery\\index.js:363:13\n    at Array.map (<anonymous>)\n    at Emittery.emit (C:\\Work\\Projects\\ai-learning\\node_modules\\emittery\\index.js:361:23)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)"
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\__tests__\\mocks\\mockAnimationProvider.test.tsx",
      "testResults": []
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493525772,
        "runtime": 4504,
        "slow": false,
        "start": 1747493521268
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\__tests__\\persistQuizMiddleware.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "persistQuizMiddleware"
          ],
          "duration": 68,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "persistQuizMiddleware should persist quiz state when actions are dispatched",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should persist quiz state when actions are dispatched"
        },
        {
          "ancestorTitles": [
            "persistQuizMiddleware"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "persistQuizMiddleware should remove quiz state from localStorage when quiz is completed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should remove quiz state from localStorage when quiz is completed"
        },
        {
          "ancestorTitles": [
            "persistQuizMiddleware"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "persistQuizMiddleware loadPersistedQuizState should return persisted state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "loadPersistedQuizState should return persisted state"
        },
        {
          "ancestorTitles": [
            "persistQuizMiddleware"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "persistQuizMiddleware clearPersistedQuizState should remove state from localStorage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "clearPersistedQuizState should remove state from localStorage"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 36,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493526475,
        "runtime": 4883,
        "slow": false,
        "start": 1747493521592
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\__tests__\\quiz-utils.test.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "formatTime"
          ],
          "duration": 43,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities formatTime formats seconds correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "formats seconds correctly"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "formatTime"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities formatTime handles null or undefined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles null or undefined"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "formatDuration"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities formatDuration formats duration correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "formats duration correctly"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "formatDate"
          ],
          "duration": 50,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities formatDate formats date correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "formats date correctly"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "formatDate"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities formatDate handles empty input",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty input"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "truncateString"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities truncateString truncates string correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "truncates string correctly"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculatePercentage"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculatePercentage calculates percentage correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calculates percentage correctly"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculatePercentage"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculatePercentage handles zero or negative maxScore",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles zero or negative maxScore"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "isPassed"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities isPassed determines if score passes threshold",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "determines if score passes threshold"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "isPassed"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities isPassed works with custom threshold",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "works with custom threshold"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "generateFeedback"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities generateFeedback generates appropriate feedback based on percentage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "generates appropriate feedback based on percentage"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculateStringSimilarity"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculateStringSimilarity calculates string similarity correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "calculates string similarity correctly"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculateStringSimilarity"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculateStringSimilarity handles empty strings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty strings"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculateStringSimilarity"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculateStringSimilarity is case insensitive",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "is case insensitive"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "evaluateOpenEndedAnswer"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities evaluateOpenEndedAnswer evaluates open-ended answers based on keywords",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "evaluates open-ended answers based on keywords"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "evaluateOpenEndedAnswer"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities evaluateOpenEndedAnswer handles empty inputs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty inputs"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "evaluateOpenEndedAnswer"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities evaluateOpenEndedAnswer matches similar words",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "matches similar words"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "evaluateCode"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities evaluateCode evaluates code against test cases",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "evaluates code against test cases"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "evaluateCode"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities evaluateCode handles empty test cases",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty test cases"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "getDifficultyColor"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities getDifficultyColor returns correct color classes for different difficulty levels",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "returns correct color classes for different difficulty levels"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "getDifficultyColor"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities getDifficultyColor handles unknown difficulty and undefined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "handles unknown difficulty and undefined"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "getDifficultyColor"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities getDifficultyColor is case insensitive",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "is case insensitive"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculateEstimatedTime"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculateEstimatedTime calculates estimated time based on question types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calculates estimated time based on question types"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculateEstimatedTime"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculateEstimatedTime handles empty questions array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty questions array"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "calculateEstimatedTime"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities calculateEstimatedTime handles unknown question types",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles unknown question types"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "areAllRequiredQuestionsAnswered"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities areAllRequiredQuestionsAnswered checks if all required questions are answered",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "checks if all required questions are answered"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "areAllRequiredQuestionsAnswered"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities areAllRequiredQuestionsAnswered detects missing answers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "detects missing answers"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "areAllRequiredQuestionsAnswered"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities areAllRequiredQuestionsAnswered skips optional questions",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "skips optional questions"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "areAllRequiredQuestionsAnswered"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities areAllRequiredQuestionsAnswered validates fill-in-the-blanks answers",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "validates fill-in-the-blanks answers"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "areAllRequiredQuestionsAnswered"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities areAllRequiredQuestionsAnswered validates open-ended answers with minimum length",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "validates open-ended answers with minimum length"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "generateId"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities generateId generates unique IDs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "generates unique IDs"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "shuffleArray"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities shuffleArray shuffles array elements",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shuffles array elements"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "shuffleArray"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities shuffleArray handles empty arrays",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty arrays"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "capitalizeFirstLetter"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities capitalizeFirstLetter capitalizes first letter",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "capitalizes first letter"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "capitalizeFirstLetter"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities capitalizeFirstLetter handles empty strings",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "handles empty strings"
        },
        {
          "ancestorTitles": [
            "Quiz Utilities",
            "debounce"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Quiz Utilities debounce debounces function calls",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "debounces function calls"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493527420,
        "runtime": 6236,
        "slow": true,
        "start": 1747493521184
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\hooks\\__tests__\\useAuth.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 83,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should return authenticated status when session exists",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return authenticated status when session exists"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should return unauthenticated status when session is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return unauthenticated status when session is missing"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should detect fromAuth parameter in URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should detect fromAuth parameter in URL"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should not detect fromAuth when parameter is missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not detect fromAuth when parameter is missing"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should call signIn when requireAuth is called and user is unauthenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should call signIn when requireAuth is called and user is unauthenticated"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 8,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should not call signIn when requireAuth is called but user is authenticated",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not call signIn when requireAuth is called but user is authenticated"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should parse redirect info from URL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should parse redirect info from URL"
        },
        {
          "ancestorTitles": [
            "useAuth hook"
          ],
          "duration": 12,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useAuth hook should handle missing redirect info",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing redirect info"
        },
        {
          "ancestorTitles": [
            "_createMockUseAuth"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "_createMockUseAuth should create default mock",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 8,
          "retryReasons": [],
          "status": "passed",
          "title": "should create default mock"
        },
        {
          "ancestorTitles": [
            "_createMockUseAuth"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "_createMockUseAuth should override defaults",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should override defaults"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 12,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493527505,
        "runtime": 6195,
        "slow": true,
        "start": 1747493521310
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\__tests__\\useQuizHook.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 88,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should return initial state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 16,
          "retryReasons": [],
          "status": "passed",
          "title": "should return initial state"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 22,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should reset quiz state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should reset quiz state"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should navigate to next question",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to next question"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 16,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should navigate to previous question",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to previous question"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should save user answer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should save user answer"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should format remaining time correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should format remaining time correctly"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should get current question",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should get current question"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should check if current question is last",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should check if current question is last"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 10,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should handle authentication requirement",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle authentication requirement"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should handle undefined quiz data",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle undefined quiz data"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 36,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should handle missing question id",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle missing question id"
        },
        {
          "ancestorTitles": [
            "useQuiz Hook"
          ],
          "duration": 28,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "useQuiz Hook should handle quiz submission",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle quiz submission"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493527774,
        "runtime": 6319,
        "slow": true,
        "start": 1747493521455
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\dashboard\\(quiz)\\components\\__tests__\\NonAuthenticatedUserSignInPrompt.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "NonAuthenticatedUserSignInPrompt"
          ],
          "duration": 283,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NonAuthenticatedUserSignInPrompt renders with default props",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "renders with default props"
        },
        {
          "ancestorTitles": [
            "NonAuthenticatedUserSignInPrompt"
          ],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NonAuthenticatedUserSignInPrompt calls onSignIn when sign-in button is clicked",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "calls onSignIn when sign-in button is clicked"
        },
        {
          "ancestorTitles": [
            "NonAuthenticatedUserSignInPrompt"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NonAuthenticatedUserSignInPrompt displays save message when showSaveMessage is true",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays save message when showSaveMessage is true"
        },
        {
          "ancestorTitles": [
            "NonAuthenticatedUserSignInPrompt"
          ],
          "duration": 11,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NonAuthenticatedUserSignInPrompt does not display save message when showSaveMessage is false",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "does not display save message when showSaveMessage is false"
        },
        {
          "ancestorTitles": [
            "NonAuthenticatedUserSignInPrompt"
          ],
          "duration": 26,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NonAuthenticatedUserSignInPrompt displays custom message when provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays custom message when provided"
        },
        {
          "ancestorTitles": [
            "NonAuthenticatedUserSignInPrompt"
          ],
          "duration": 20,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "NonAuthenticatedUserSignInPrompt redirects to default route when onSignIn not provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "redirects to default route when onSignIn not provided"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 15,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493528238,
        "runtime": 6984,
        "slow": true,
        "start": 1747493521254
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\__tests__\\CodeQuizTest.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 158,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should display loading state initially",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should display loading state initially"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 71,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should display quiz questions when loaded",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should display quiz questions when loaded"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 34,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should navigate to next question when answering",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should navigate to next question when answering"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 37,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should show results preview on last question",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should show results preview on last question"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 37,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should submit quiz and redirect to results page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "should submit quiz and redirect to results page"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 55,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should show sign-in prompt for non-authenticated users",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should show sign-in prompt for non-authenticated users"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 9,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should handle errors properly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle errors properly"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component should handle empty questions state",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle empty questions state"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 42,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component redirects unauthenticated user to login page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "redirects unauthenticated user to login page"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 37,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component sends correct payload on submit",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "sends correct payload on submit"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 15,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component saves result in state after successful API response",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "saves result in state after successful API response"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 41,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component shows success toast on result save",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "shows success toast on result save"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 30,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component prevents tampering by validating submission server-side",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "prevents tampering by validating submission server-side"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 14,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component does not expose auth token in client state or DOM",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "does not expose auth token in client state or DOM"
        },
        {
          "ancestorTitles": [
            "Code Quiz Component"
          ],
          "duration": 43,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Component displays quiz result from state after sign-in",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "displays quiz result from state after sign-in"
        }
      ],
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 3,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1747493528730,
        "runtime": 6929,
        "slow": true,
        "start": 1747493521801
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "C:\\Work\\Projects\\ai-learning\\app\\__tests__\\CodeQuizSubmission.test.tsx",
      "testResults": [
        {
          "ancestorTitles": [
            "Code Quiz Submission Flow"
          ],
          "duration": 277,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Submission Flow handles submission payload correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles submission payload correctly"
        },
        {
          "ancestorTitles": [
            "Code Quiz Submission Flow"
          ],
          "duration": 104,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Submission Flow handles server-side validation errors",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 5,
          "retryReasons": [],
          "status": "passed",
          "title": "handles server-side validation errors"
        },
        {
          "ancestorTitles": [
            "Code Quiz Submission Flow"
          ],
          "duration": 44,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Code Quiz Submission Flow handles missing quiz ID in payload",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "handles missing quiz ID in payload"
        }
      ],
      "failureMessage": null
    }
  ],
  "wasInterrupted": false
}